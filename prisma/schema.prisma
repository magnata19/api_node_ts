// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String               @id @default(uuid())
  name           String               @db.VarChar(100)
  surname        String               @db.VarChar(100)
  email          String               @unique @db.VarChar(100)
  password       String               @db.VarChar(255)
  createdAt      DateTime?            @default(now())
  updatedAt      DateTime?            @updatedAt
  confirmed      Boolean?             @default(false)
  confirmCode    String?
  userPermission UserRolePermission[]
}

model Role {
  id             String               @id @default(uuid())
  name           String               @unique @db.VarChar(50)
  description    String?              @db.VarChar(255)
  rolePermission UserRolePermission[]
  permissionRole PermissionRole[]
}

model Permission {
  id             String               @id @default(uuid())
  name           String               @unique @db.VarChar(50)
  description    String?              @db.VarChar(255)
  userPermission UserRolePermission[]
  PermissionRole PermissionRole[]
}

model UserRolePermission {
  id           String      @id @default(uuid())
  user         User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String
  permission   Permission? @relation(fields: [permissionId], references: [id], onDelete: Cascade)
  permissionId String?
  Role         Role        @relation(fields: [roleId], references: [id])
  roleId       String

  @@unique([userId, permissionId])
  @@map("PermissionUser")
}

model PermissionRole {
  id           String     @id @default(uuid())
  permission   Permission @relation(fields: [permissionId], references: [id])
  permissionId String
  role         Role       @relation(fields: [roleId], references: [id])
  roleId       String

  @@unique([roleId, permissionId])
}

model Store {
  id          String  @id @default(uuid())
  name        String  @db.VarChar(100)
  description String? @db.VarChar(100)
  location    String? @db.VarChar(255)
}
